# frozen_string_literal: true

class GameInterface
  ASK_NAME = '–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è'
  PLAYER_ACTIONS = ['0 - ‚è≥ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥',
                    '1 - ü§è –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É',
                    '2 - üî• –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—ã',
                    '3 - üî• –í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã'].freeze
  LINE = '=' * 40
  EXIT_MENU = ['‚ô†Ô∏è ‚ô£Ô∏è ‚ô•Ô∏è ‚ô¶Ô∏è –ò–≥—Ä–∞ –∑–∞–∫–æ–Ω–µ—á–Ω–∞! ‚ô†Ô∏è ‚ô£Ô∏è ‚ô•Ô∏è ‚ô¶Ô∏è',
               '–ù–∞–∂–º–∏—Ç–µ 1 - üî• –ù–æ–≤–∞—è –∏–≥—Ä–∞!',
               '–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ ENTER –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã üòü'].freeze
  INFORMATION = ['–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ ENTER –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è'].freeze
  HELP = '–ö–æ—Ä–æ–ª—å, –î–∞–º–∞, –í–∞–ª–µ—Ç = 10, –¢—É–∑ = 11 –∏–ª–∏ 1'
  USER_COMMANDS = /^[0-3]$/.freeze

  attr_reader :user_name
  attr_accessor :user, :dealer

  def initialize
    @user_name = ask_name
  end

  def closed(cards)
    puts 'üÉè' * cards
  end

  def help
    puts HELP
  end

  def ask_name
    puts ASK_NAME
    gets.chomp
  end

  def user_action(game)
    loop do
      game.action = main_layout(game.round, game.bank)
      break if game.action =~ USER_COMMANDS
    end
  end

  def main_layout(round, bank)
    header(round, bank)
    info_layout(dealer)
    info_layout(user, hidden: false)
    footer
  end

  def footer
    puts LINE
    puts PLAYER_ACTIONS
    gets.chomp
  end

  def header(round, bank)
    system('clear')
    puts '‚≠êÔ∏è –ò–≥—Ä–∞ BlackJack ‚≠êÔ∏è'
    help
    puts "–¢–µ–∫—É—â–∏–π —Ä–∞—É–Ω–¥: #{round}, —Å—Ç–∞–≤–∫–∞ #{bank}"
  end

  def info_layout(player, hidden: true)
    puts LINE
    puts "–ò–≥—Ä–æ–∫ #{player.name} $: #{player.money}"
    points = hidden ? '' : "–û—á–∫–∏: #{player.hand.points}"
    puts points unless hidden
    display_cards(player.hand.cards, hidden)
  end

  def round_end(winner)
    puts "–í—ã–π–≥—Ä–∞–ª üèÜ üèÜ üèÜ #{winner}üèÜ üèÜ üèÜ "
    puts INFORMATION
    gets.chomp
  end

  def display_cards(cards, hidden)
    cards = hidden ? closed(cards.size) : cards
    cards ||= []
    cards.each { |card| print "#{card.suit}  " }
    puts '' unless hidden
  end

  def game_over
    puts EXIT_MENU
    gets.chomp
  end
end
